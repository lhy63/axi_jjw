// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Design implementation internals
// See VTopAxiMasterWandRWithSlave.h for the primary calling header

#include "verilated.h"
#include "verilated_dpi.h"

#include "VTopAxiMasterWandRWithSlave_Axi4_transmission.h"

VL_ATTR_COLD void VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_8(VTopAxiMasterWandRWithSlave_Axi4_transmission* vlSelf) {
    if (false && vlSelf) {}  // Prevent unused
    VTopAxiMasterWandRWithSlave__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+        VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_8\n"); );
    // Body
    vlSelf->__PVT__regVec_3962 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3963 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3964 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3965 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3966 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3967 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3968 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3969 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3970 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3971 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3972 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3973 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3974 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3975 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3976 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3977 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3978 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3979 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3980 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3981 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3982 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3983 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3984 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3985 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3986 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3987 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3988 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3989 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3990 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3991 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3992 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3993 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3994 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3995 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3996 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3997 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3998 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_3999 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4000 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4001 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4002 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4003 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4004 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4005 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4006 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4007 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4008 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4009 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4010 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4011 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4012 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4013 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4014 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4015 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4016 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4017 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4018 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4019 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4020 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4021 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4022 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4023 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4024 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4025 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4026 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4027 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4028 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4029 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4030 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4031 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4032 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4033 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4034 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4035 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4036 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4037 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4038 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4039 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4040 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4041 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4042 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4043 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4044 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4045 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4046 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4047 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4048 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4049 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4050 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4051 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4052 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4053 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4054 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4055 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4056 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4057 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4058 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4059 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4060 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4061 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4062 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4063 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4064 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4065 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4066 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4067 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4068 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4069 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4070 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4071 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4072 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4073 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4074 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4075 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4076 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4077 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4078 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4079 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4080 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4081 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4082 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4083 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4084 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4085 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4086 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4087 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4088 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4089 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4090 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4091 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4092 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4093 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4094 = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regVec_4095 = VL_RAND_RESET_I(8);
    vlSelf->regAwAddr = VL_RAND_RESET_I(12);
    vlSelf->__PVT__regAwId = VL_RAND_RESET_I(4);
    vlSelf->__PVT__regAwRegion = VL_RAND_RESET_I(4);
    vlSelf->__PVT__regAwLen = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regAwSize = VL_RAND_RESET_I(3);
    vlSelf->__PVT__regAwBrust = VL_RAND_RESET_I(2);
    vlSelf->__PVT__regAwLock = VL_RAND_RESET_I(1);
    vlSelf->__PVT__regAwCache = VL_RAND_RESET_I(4);
    vlSelf->__PVT__regAwQos = VL_RAND_RESET_I(4);
    vlSelf->__PVT__regAwUser = VL_RAND_RESET_I(1);
    vlSelf->__PVT__regAwProt = VL_RAND_RESET_I(3);
    vlSelf->__PVT__regArAddr = VL_RAND_RESET_I(12);
    vlSelf->__PVT__regArId = VL_RAND_RESET_I(4);
    vlSelf->__PVT__regArRegion = VL_RAND_RESET_I(4);
    vlSelf->__PVT__regArLen = VL_RAND_RESET_I(8);
    vlSelf->__PVT__regArSize = VL_RAND_RESET_I(3);
    vlSelf->__PVT__regArBrust = VL_RAND_RESET_I(2);
    vlSelf->__PVT__regArLock = VL_RAND_RESET_I(1);
    vlSelf->__PVT__regArCache = VL_RAND_RESET_I(4);
    vlSelf->__PVT__regArQos = VL_RAND_RESET_I(4);
    vlSelf->__PVT__regArUser = VL_RAND_RESET_I(1);
    vlSelf->__PVT__regArProt = VL_RAND_RESET_I(3);
    vlSelf->__PVT__updataAw = VL_RAND_RESET_I(1);
    vlSelf->__PVT__writeSuccess = VL_RAND_RESET_I(1);
    vlSelf->__PVT__updataAr = VL_RAND_RESET_I(1);
    vlSelf->__PVT__rFireCounter_willIncrement = VL_RAND_RESET_I(1);
    vlSelf->__PVT__rFireCounter_valueNext = VL_RAND_RESET_I(13);
    vlSelf->__PVT__rFireCounter_value = VL_RAND_RESET_I(13);
    vlSelf->__PVT__AwArConflict = VL_RAND_RESET_I(1);
    vlSelf->__PVT__when_Axi4_transmission_l68 = VL_RAND_RESET_I(1);
    vlSelf->__PVT__when_Axi4_transmission_l72 = VL_RAND_RESET_I(1);
    vlSelf->__PVT__when_Axi4_transmission_l91 = VL_RAND_RESET_I(1);
    vlSelf->__PVT__Axi4Incr_result = VL_RAND_RESET_I(12);
    vlSelf->__PVT___zz_Axi4Incr_wrapCase = VL_RAND_RESET_I(2);
    vlSelf->__PVT__when_Axi4_transmission_l132 = VL_RAND_RESET_I(1);
    vlSelf->__PVT__when_Axi4_transmission_l144 = VL_RAND_RESET_I(1);
    vlSelf->__PVT__Axi4Incr_result_1 = VL_RAND_RESET_I(12);
    vlSelf->__PVT___zz_Axi4Incr_wrapCase_1 = VL_RAND_RESET_I(2);
    vlSelf->__PVT__when_Axi4_transmission_l177 = VL_RAND_RESET_I(1);
    vlSelf->__PVT__regLast = VL_RAND_RESET_I(1);
    vlSelf->__PVT__when_Axi4_transmission_l184 = VL_RAND_RESET_I(1);
    vlSelf->__PVT__when_Axi4_transmission_l191 = VL_RAND_RESET_I(1);
}

VL_ATTR_COLD void VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_0(VTopAxiMasterWandRWithSlave_Axi4_transmission* vlSelf);
VL_ATTR_COLD void VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_1(VTopAxiMasterWandRWithSlave_Axi4_transmission* vlSelf);
VL_ATTR_COLD void VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_2(VTopAxiMasterWandRWithSlave_Axi4_transmission* vlSelf);
VL_ATTR_COLD void VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_3(VTopAxiMasterWandRWithSlave_Axi4_transmission* vlSelf);
VL_ATTR_COLD void VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_4(VTopAxiMasterWandRWithSlave_Axi4_transmission* vlSelf);
VL_ATTR_COLD void VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_5(VTopAxiMasterWandRWithSlave_Axi4_transmission* vlSelf);
VL_ATTR_COLD void VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_6(VTopAxiMasterWandRWithSlave_Axi4_transmission* vlSelf);
VL_ATTR_COLD void VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_7(VTopAxiMasterWandRWithSlave_Axi4_transmission* vlSelf);

VL_ATTR_COLD void VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset(VTopAxiMasterWandRWithSlave_Axi4_transmission* vlSelf) {
    if (false && vlSelf) {}  // Prevent unused
    VTopAxiMasterWandRWithSlave__Syms* const __restrict vlSymsp VL_ATTR_UNUSED = vlSelf->vlSymsp;
    VL_DEBUG_IF(VL_DBG_MSGF("+        VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset\n"); );
    // Body
    VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_0(vlSelf);
    VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_1(vlSelf);
    VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_2(vlSelf);
    VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_3(vlSelf);
    VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_4(vlSelf);
    VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_5(vlSelf);
    VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_6(vlSelf);
    VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_7(vlSelf);
    VTopAxiMasterWandRWithSlave_Axi4_transmission___ctor_var_reset_8(vlSelf);
}
